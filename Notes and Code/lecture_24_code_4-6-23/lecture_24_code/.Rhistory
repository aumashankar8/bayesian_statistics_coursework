c(t,t.crit,p.val)
l=r-t.crit*SE.r
u=r+t.crit*SE.r
c(l,u)  # 95% C
n=32
r=-0.402
df.r=n-2
SE.r=sqrt((1-r^2)/df.r)
t=r/SE.r
alpha=.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(abs(t),df.r))
c(t,t.crit,p.val)
l=r-t.crit*SE.r
u=r+t.crit*SE.r
c(l,u)  # 95% CI f
y=c(105,150,159,159,192,210,240,210,270)  # Calories
x=c(3.5,5.1,5.2,5.3,6.2,7.0,8.0,8.0,10.0) # ABV
plot(x,y)
n=length(y)
ybar=mean(y)
xbar=mean(x)
sy=sd(y)
sx=sd(x)
r=cor(y,x)
r
b1=r*sy/sx
b0=ybar-b1*xbar
c(b0,b1)
x.pred=9
y.pred=b0+b1*x.pred
y.pred
R.sq=r^2
R.sq
y.hat=b0+b1*x
e=y-y.hat
SSE=sum(e^2)
SST=(n-1)*sy^2
SSR=SST-SSE  # SS regression!
SSR/SST
n=32
xbar=32.2
sx=19.9
ybar=4.309
sy=2.677
r=.791
b1=r*sy/sx
b0=ybar-b1*xbar
c(b0,b1)
x.pred=50
y.pred=b0+b1*x.pred
y.pred
R.sq=r^2
R.sq
r
n=8
r=.688
df.r=n-2
SE.r=sqrt((1-r^2)/df.r)
t=r/SE.r
alpha=.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(abs(t),df.r))
c(t,t.crit,p.val)
l=r-t.crit*SE.r
u=r+t.crit*SE.r
c(l,u)  # 9
n=16
r=-0.402
df.r=n-2
SE.r=sqrt((1-r^2)/df.r)
t=r/SE.r
alpha=.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(abs(t),df.r))
c(t,t.crit,p.val)
n=32
r=-0.402
df.r=n-2
SE.r=sqrt((1-r^2)/df.r)
t=r/SE.r
alpha=.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(abs(t),df.r))
c(t,t.crit,p.val)
r
l=r-t.crit*SE.r
u=r+t.crit*SE.r
c(l,u)  # 95
y=c(105,150,159,159,192,210,240,210,270)  # Calories
x=c(3.5,5.1,5.2,5.3,6.2,7.0,8.0,8.0,10.0) # ABV
plot(x,y)
n=length(y)
ybar=mean(y)
xbar=mean(x)
sy=sd(y)
sx=sd(x)
r=cor(y,x)
b1=r*sy/sx
b0=ybar-b1*xbar
c(b0,b1)
x.pred=9
y.pred=b0+b1*x.pred
y.pred
abline(b0,b1)
n=11
r=0.626
SEr=sqrt((1-r)/(n-2))
t=r/SEr
alpha=0.05
t.crit=qt(1-alpha/2,n-2)
t
n=11
r=0.626
df.r=n-2
SEr=sqrt((1-r)/df.r)
t=r/SEr
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
SEr
n=11
r=0.626
df.r=n-2
SEr=sqrt((1-r^2)/df.r)
t=r/SEr
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
SE.b1=4.848
b1=11.677
l=b1-t.crit*SE.b1
u=b1+t.crit*SE.b1
c(l,u)
n=18
b0=0.182
b1=0.029
SE.b1=.005
t=b1/SEb
n=18
b0=0.182
b1=0.029
SE.b1=.005
t=b1/SE.b1
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
c(t,t.crit,p.val)
n=18
df.r=n-2
b0=0.182
b1=0.029
SE.b1=.005
t=b1/SE.b1
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
y=c(105,150,159,159,192,210,240,210,270)  # Calories
x=c(3.5,5.1,5.2,5.3,6.2,7.0,8.0,8.0,10.0) # ABV
plot(x,y)
n=length(y)
ybar=mean(y)
xbar=mean(x)
sy=sd(y)
sx=sd(x)
r=cor(y,x)
b1=r*sy/sx
b0=ybar-b1*xbar
c(b0,b1)
x.pred=9
y.pred=b0+b1*x.pred
y.pred
R.sq=r^2
R.sq
y.hat=b0+b1*x
e=y-y.hat
SSE=sum(e^2)  # also called SSresid b/c it's estimate of SSE
SST=(n-1)*sy^2
SSR=SST-SSE  # SS regression!
SSR/SST
MSE=SSE/(n-2)
SE.b1=sqrt(MSE/sum((x-mean(x))^2)))
SE.b1=sqrt(MSE/sum((x-mean(x))^2))
SE.b1
n=9
n=length(y)
n
MSE=SSE/(n-2)
SE.b1=sqrt(MSE/sum((x-mean(x))^2))
t=b1/SE.b1
alpha=.05
t.crit=qt(1-alpha/2,n-2)
p.val=2*(1-pt(t,n-2))
c(t,t.crit,p.value)
c(t,t.crit,p.val)
n
y=c(105,150,159,159,192,210,240,210,270)  # Calories
x=c(3.5,5.1,5.2,5.3,6.2,7.0,8.0,8.0,10.0) # ABV
plot(x,y)
n=length(y)
ybar=mean(y)
n
xbar=mean(x)
sy=sd(y)
sx=sd(x)
r=cor(y,x)
b1=r*sy/sx
b0=ybar-b1*xbar
c(b0,b1)
x.pred=9
y.pred=b0+b1*x.pred
y.pred
R.sq=r^2
R.sq
# check R.sq
y.hat=b0+b1*x
e=y-y.hat
SSE=sum(e^2)  # also called SSresid b/c it's estimate of SSE
SST=(n-1)*sy^2
SSR=SST-SSE  # SS regression!
SSR/SST
# Test for slope (b1)
MSE=SSE/(n-2)
SE.b1=sqrt(MSE/sum((x-mean(x))^2))
t=b1/SE.b1
alpha=.05
t.crit=qt(1-alpha/2,n-2)
p.val=2*(1-pt(t,n-2))
c(t,t.crit,p.val)
l=b1-t.crit*SE.b1
u=b1+t.crit*SE.b1
c(l,u)
4.3+.34*3.5+.55*5-.12*2
n=11
r=0.626
df.r=n-2
SEr=sqrt((1-r^2)/df.r)
t=r/SEr
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
n=18
df.r=n-2
b0=0.182
b1=0.029
SE.b1=.005
t=b1/SE.b1
alpha=0.05
t.crit=qt(1-alpha/2,df.r)
p.val=2*(1-pt(t,df.r))
c(t,t.crit,p.val)
9.76-2.9-.22*2+.18*3-.32*2
.32*2
.18*3
.22*2
9.76 – 2.9*(1) – 0.22*(2) + 0.18*(3) – 0.32*(1*2)
9.76 - 2.9*(1) - 0.22*(2) + 0.18*(3) - 0.32*(1*2)
9.76 - 2.9 - 0.44 + 0.54 - 0.64
q()
(855.2/2)/(503.8/17)
855.2/2
503.8/17
?t.test
n=20
y1=rnorm(n,0,1)
y2=rnorm(n,.1,1)
t.test(y1,y2,var.equal=TRUE)
x=rep(0,2*n)
x[1:n]=1
y=c(y1,y2)
summary(lm(y~x))
prelim_data <- read.csv("~/Desktop/prelim_data.csv")
View(prelim_data)
prelim_data <- read.csv("~/Desktop/prelim_data.csv")
elim <- prelim[prelim$diff_wbc > -3.7 & prelim$diff_wbc < 2.7, ]
elim2 <- elim[elim$basal_alt > -22 & elim$basal_alt < 122, ]
prelim <- read.csv("~/Desktop/prelim_data.csv")
elim <- prelim[prelim$diff_wbc > -3.7 & prelim$diff_wbc < 2.7, ]
elim2 <- elim[elim$basal_alt > -22 & elim$basal_alt < 122, ]
elim2$logalt <- log(elim2$basal_alt)
elim2$logalt_c <- elim2$logalt - mean(elim2$logalt)
mymodel1<-lm(diff_wbc~logalt_c*treatment, data=elim2)
summary(mymodel1)
library(ggplot2)
ggplot(elim2,aes(x=logalt,y=diff_wbc,color=treatment)) + geom_smooth(method='lm') + geom_point() + xlab('log of Initial ALT Concentration (U/L)') + ylab('Difference in WBC Count (WBC/microL)') + labs(col='Treatment') + ggtitle('Change in WBC Count by log Initial ALT Concentration and Treatment') +  theme_classic()
plot(elim2$logalt, elim2$diff_wbc, xlab='log Initial ALT Concentration (U/L)', ylab= 'Change in WBC Count (WBC/microL)', main='Change in WBC Count by log Initial ALT Concentration', pch=20)
my_glm <- lm(diff_wbc ~ treatment + logalt, data=elim2)
hist(my_glm$residuals, main='Model Residuals', xlab='Residual', col='light grey', right=F)
plot(my_glm$fitted.values, my_glm$residuals, xlab= 'Fitted Values', ylab='Residuals', main='Residual Plot', pch=20)
abline(h=0, col='red')
#my_glm <- lm(diff_wbc ~ treatment + logalt, data=elim2)
my_glm <- lm(diff_wbc ~ treatment*logalt, data=elim2)
hist(my_glm$residuals, main='Model Residuals', xlab='Residual', col='light grey', right=F)
plot(my_glm$fitted.values, my_glm$residuals, xlab= 'Fitted Values', ylab='Residuals', main='Residual Plot', pch=20)
abline(h=0, col='red')
#my_glm <- lm(diff_wbc ~ treatment + logalt, data=elim2)
my_glm <- lm(diff_wbc ~ treatment*logalt_c, data=elim2)
hist(my_glm$residuals, main='Model Residuals', xlab='Residual', col='light grey', right=F)
plot(my_glm$fitted.values, my_glm$residuals, xlab= 'Fitted Values', ylab='Residuals', main='Residual Plot', pch=20)
abline(h=0, col='red')
elim2$treatment
summary(mymodel1)
library(ggplot2)
ggplot(elim2,aes(x=logalt,y=diff_wbc,color=treatment)) + geom_smooth(method='lm') + geom_point() + xlab('log of Initial ALT Concentration (U/L)') + ylab('Difference in WBC Count (WBC/microL)') + labs(col='Treatment') + ggtitle('Change in WBC Count by log Initial ALT Concentration and Treatment') +  theme_classic()
plot(elim2$logalt, elim2$diff_wbc, xlab='log Initial ALT Concentration (U/L)', ylab= 'Change in WBC Count (WBC/microL)', main='Change in WBC Count by log Initial ALT Concentration', pch=20)
ggplot(elim2,aes(x=logalt,y=diff_wbc,color=treatment)) + geom_smooth(method='lm') + geom_point() + xlab('log of Initial ALT Concentration (U/L)') + ylab('Difference in WBC Count (WBC/microL)') + labs(col='Treatment') + ggtitle('Change in WBC Count by log Initial ALT Concentration and Treatment') +  theme_classic()
log(.5)
theta=seq(0,1,,n.sim)
n.sim=1000
theta=seq(0,1,,n.sim)
kl=log(2(1-theta))
plot(theta,kl,type="l")
n.sim=1000
theta=seq(0,1,,n.sim)
kl=log(2(1-theta))
plot(theta,kl,type="l")
kl=log(2*(1-theta))
plot(theta,kl,type="l")
n.sim=1000
theta=seq(0,1,,n.sim)
kl=log(theta/.5)*theta+log((1-theta)/.5)*(1-theta)
plot(theta,kl,type="l")
Eq=theta
plot(theta,kl,type="l")
plot(theta,Eq-kl,type="l")
plot(theta,kl,type="l")
lines(theta,Eq-kl,col=2)
plot(theta,kl,type="l")
lines(theta,Eq+kl,col=2)
theta.opt=exp(-1)/(1+exp(-1))
plot(theta,kl,type="l")
lines(theta,Eq+kl,col=2)
abline(v=theta.opt,col=3)
plot(theta,kl,type="l")
lines(theta,Eq+kl,col=2)
lines(theta,Eq,col=4)
abline(v=theta.opt,col=3)
exp(-1)/(1+exp(-1))
theta=exp(-1)/(1+exp(-1))
n=100
y=rbinom(n,1,theta)
table(y)
theta=exp(-1)/(1+exp(-1))
n=100
y=rbinom(n,1,theta)
a=1
b=1
a.post=sum(y)+a
b.post=sum(1-y)+b
n.mc=10000
theta.samp=rbeta(n.mc,a.post,b.post)
q0.samp=(log(theta.samp/(1-theta.samp))+1)/2
layout(matrix(1:2,1,2))
hist(theta.samp,break=50)
theta=exp(-1)/(1+exp(-1))
n=100
y=rbinom(n,1,theta)
a=1
b=1
a.post=sum(y)+a
b.post=sum(1-y)+b
n.mc=10000
theta.samp=rbeta(n.mc,a.post,b.post)
q0.samp=(log(theta.samp/(1-theta.samp))+1)/2
layout(matrix(1:2,1,2))
hist(theta.samp,breaks=50)
hist(q0.samp,breaks=50)
theta=exp(-1)/(1+exp(-1))
q0=(log(theta/(1-theta))+1)/2
n=100
y=rbinom(n,1,theta)
a=1
b=1
a.post=sum(y)+a
b.post=sum(1-y)+b
n.mc=10000
theta.samp=rbeta(n.mc,a.post,b.post)
q0.samp=(log(theta.samp/(1-theta.samp))+1)/2
layout(matrix(1:2,1,2))
hist(theta.samp,breaks=50)
abline(v=theta,col=2)
hist(q0.samp,breaks=50)
abline(v=q0,col=2)
exp(-1)/(1+exp(-1))
exp(1)/(1+exp(1))
theta.l=exp(-1)/(1+exp(-1))
theta.u=exp(1)/(1+exp(1))
n.mcmc=100000
theta.save=rep(0,n.mcmc)
theta=.5
for(k in 1:n.mcmc){
theta.star=runif(1,theta.l,theta.u)
mh.1=sum(dbinom(y,1,theta.star,log=TRUE))
mh.2=sum(dbinom(y,1,theta,log=TRUE))
mh=exp(mh.1-mh.2){
theta.l=exp(-1)/(1+exp(-1))
theta.u=exp(1)/(1+exp(1))
n.mcmc=100000
theta.save=rep(0,n.mcmc)
theta=.5
for(k in 1:n.mcmc){
theta.star=runif(1,theta.l,theta.u)
mh.1=sum(dbinom(y,1,theta.star,log=TRUE))
mh.2=sum(dbinom(y,1,theta,log=TRUE))
mh=exp(mh.1-mh.2)
if(mh>runif(1)){
theta=theta.star
}
theta.save[k]=theta
}
q0.save=(log(theta.save/(1-theta.save))+1)/2
layout(matrix(1:2,1,2))
hist(theta.save,breaks=50)
abline(v=theta,col=2)
hist(q0.save,breaks=50)
abline(v=q0,col=2)
layout(matrix(1:2,1,2))
hist(theta.save,breaks=50,xlim=c(0,1))
abline(v=theta,col=2,lwd=2)
hist(q0.save,breaks=50,xlim=c(0,1))
abline(v=q0,col=2,lwd=2)
?det
a=2
b=c(1,3)
C=matrix(c(4,3,3,2),2,2)
solve(C)
mu.sig=0
s2.sig=1
log.sig=rnorm(10000,mu.sig,sqrt(s2.sig))
layout(matrix(1:2,1,2))
hist(log.sig)
hist(exp(log.sig)^2)
mu.sig=0
s2.sig=.1
log.sig=rnorm(10000,mu.sig,sqrt(s2.sig))
layout(matrix(1:2,1,2))
hist(log.sig)
hist(exp(log.sig)^2)
mu.sig=0
s2.sig=.2
log.sig=rnorm(10000,mu.sig,sqrt(s2.sig))
layout(matrix(1:2,1,2))
hist(log.sig)
hist(exp(log.sig)^2)
mu.sig=1
s2.sig=.1
log.sig=rnorm(10000,mu.sig,sqrt(s2.sig))
layout(matrix(1:2,1,2))
hist(log.sig)
hist(exp(log.sig)^2)
setwd("/Users/mh5379/Desktop/lecture_24_code")
library(mvnfast)
n=2
mu=1
s2=.8
Sig1=s2*diag(n)
Tau1=solve(Sig1)
rho=.9
R=diag(n)
R[1,2]=rho
R[2,1]=rho
Sig2=s2*R
Tau2=solve(Sig2)
library(rjags)
library(coda)
m1.jags <-"
model{
y ~ dmnorm(mu.vec,Tau1)
mu.vec=rep(mu,n)
mu ~ dnorm(mu0,tau0)
}
"
m2.jags <-"
model{
y ~ dmnorm(mu.vec,Tau2)
mu.vec=rep(mu,n)
mu ~ dnorm(mu0,tau0)
}
"
n.mcmc=10000
n.burn=round(.2*n.mcmc)
mod1<-textConnection(m1.jags)
mod2<-textConnection(m2.jags)
mu0=0
tau0=1/1000
p1.vec=rep(0,n.sim)
set.seed(404)
y=c(rmvn(1,rep(mu,2),Sig2)) # simulate data from model w/ dependence
m1.out<-jags.model(mod1,data=list('y'=y,'n'=n,'mu0'=mu0,'tau0'=tau0,'Tau1'=Tau1),n.chains=1,n.adapt=0)
m2.out<-jags.model(mod2,data=list('y'=y,'n'=n,'mu0'=mu0,'tau0'=tau0,'Tau2'=Tau2),n.chains=1,n.adapt=0)
m1.samp=jags.samples(m1.out,c('mu'),n.mcmc)
p1=mean(m1.samp$mu[1,,1]>0)
m2.samp=jags.samples(m2.out,c('mu'),n.mcmc)
p2=mean(m2.samp$mu[1,,1]>0)
p1
p2
d1=density(m1.samp$mu[1,,1])
d2=density(m2.samp$mu[1,,1])
plot(d1,type="l",lwd=2,col=rgb(0,0,0,.5),ylim=c(0,max(d1$y,d2$y)),main="",xlab=bquote(mu))
lines(d2,type="l",lwd=2,col=rgb(1,0,0,.5))
abline(v=0,col=rgb(0,0,0,.4),lty=2)
legend("topright",col=c(rgb(0,0,0,.5),rgb(1,0,0,.5)),lwd=2,legend=c("w/o corr","w/ corr"))
plot(d1,type="l",lwd=2,col=rgb(0,0,0,.5),ylim=c(0,max(d1$y,d2$y)),main="",xlab=bquote(mu))
lines(d2,type="l",lwd=2,col=rgb(1,0,0,.5))
abline(v=0,col=rgb(0,0,0,.4),lty=2)
legend("topright",col=c(rgb(0,0,0,.5),rgb(1,0,0,.5)),lwd=2,legend=c("w/o corr","w/ corr"))
y
